version: '3'
networks:
  tick:
services:
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    restart: 'no'
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    hostname: influxdb
    networks:
      - tick
    ports:
      - 8086:8086/tcp
      - 8088:8088/tcp
    volumes:
      - /var/lib/influxdb:/var/lib/influxdb
    environment:
      INFLUXDB_HOSTNAME: influxdb

      # Once every 24 hours InfluxDB will report usage data to usage.influxdata.com. Change this option to true to
      # disable reporting.
      INFLUXDB_REPORTING_DISABLED: 'true'

      # Bind address to use for the RPC service for backup and restore.
      INFLUXDB_BIND_ADDRESS: 0.0.0.0:8088



      # The following _USER and _PASSWORD environment variables will only work, if the environment variable
      # INFLUXDB_HTTP_AUTH_ENABLED or the config variable auth-enabled is true:

      # Admin username (mandatory if auth-enabled is true and any other of these environment variables is set)
      INFLUXDB_ADMIN_USER: admin

      # Admin password (Password will be generated and printed if not set)
      INFLUXDB_ADMIN_PASSWORD: changeme

      # Name for a user with read and write permissions on the INFLUXDB_DB database
      INFLUXDB_USER: rwuser
      
      # Password for INFLUXDB_USER (Password will be generated and printed if not set)
      INFLUXDB_USER_PASSWORD: changeme

      # Name for a user with read permissions on the INFLUXDB_DB database
      INFLUXDB_READ_USER: rouser
      
      # Password for INFLUXDB_READ_USER (Password will be generated and printed if not set)
      INFLUXDB_READ_USER_PASSWORD: changeme

      # Name for a user with write permissions on the INFLUXDB_DB database
      INFLUXDB_WRITE_USER: wouser
      
      # Password for INFLUXDB_WRITE_USER (Password will be generated and printed if not set)
      INFLUXDB_WRITE_USER_PASSWORD: changeme



      ### Controls where the actual shard data for InfluxDB lives and how it is flushed from the WAL. "dir" may need to
      ### be changed to a suitable place for your system, but the WAL settings are an advanced configuration. The
      ### defaults should work for most systems.

      # The directory where the TSM storage engine stores TSM files.
      INFLUXDB_DATA_DIR: /var/lib/influxdb/data

      # The directory where the TSM storage engine stores WAL files.
      INFLUXDB_DATA_WAL_DIR: /var/lib/influxdb/wal

      # The amount of time that a write will wait before fsyncing. A duration greater than 0 can be used to batch up
      # multiple fsync calls. This is useful for slower disks or when WAL write contention is seen. A value of 0s
      # fsyncs every write to the WAL. Values in the range of 0-100ms are recommended for non-SSD disks.
      #INFLUXDB_DATA_WAL_FSYNC_DELAY: 0s

      # The type of shard index to use for new shards. The default is an in-memory index that is recreated at startup.
      # A value of "tsi1" will use a disk based index that supports higher cardinality datasets.
      INFLUXDB_DATA_INDEX_VERSION: tsi1

      # Trace logging provides more verbose output around the tsm engine. Turning this on can provide more useful
      # output for debugging tsm engine issues.
      #INFLUXDB_DATA_TRACE_LOGGING_ENABLED: 'false'

      # Whether queries should be logged before execution. Very useful for troubleshooting, but will log any sensitive
      # data contained within a query.
      #INFLUXDB_DATA_QUERY_LOG_ENABLED: 'true'

      # Validates incoming writes to ensure keys only have valid unicode characters. This setting will incur a small
      # overhead because every key must be checked.
      #INFLUXDB_DATA_VALIDATE_KEYS: 'false'



      ### Settings for the TSM engine

      # CacheMaxMemorySize is the maximum size a shard's cache can reach before it starts rejecting writes. Valid size
      # suffixes are k, m, or g (case insensitive, 1024 = 1k). Values without a size suffix are in bytes.
      #INFLUXDB_DATA_CACHE_MAX_MEMORY_SIZE: 1g

      # CacheSnapshotMemorySize is the size at which the engine will snapshot the cache and write it to a TSM file,
      # freeing up memory. Valid size suffixes are k, m, or g (case insensitive, 1024 = 1k). Values without a size
      # suffix are in bytes.
      #INFLUXDB_DATA_CACHE_SNAPSHOT_MEMORY_SIZE: 25m

      # CacheSnapshotWriteColdDuration is the length of time at which the engine will snapshot the cache and write it
      # to a new TSM file if the shard hasn't received writes or deletes
      #INFLUXDB_DATA_CACHE_SNAPSHOT_WRITE_COLD_DURATION: 10m

      # CompactFullWriteColdDuration is the duration at which the engine will compact all TSM files in a shard if it
      # hasn't received a write or delete.
      #INFLUXDB_DATA_COMPACT_FULL_WRITE_COLD_DURATION: 4h

      # The maximum number of concurrent full and level compactions that can run at one time. A value of 0 results in
      # 50% of runtime.GOMAXPROCS(0) used at runtime. Any number greater than 0 limits compactions to that value. This
      # setting does not apply to cache snapshotting.
      #INFLUXDB_DATA_MAX_CONCURRENT_COMPACTIONS: 0

      # CompactThroughput is the rate limit in bytes per second that we will allow TSM compactions to write to disk.
      # Note that short bursts are allowed to happen at a possibly larger value, set by CompactThroughputBurst.
      #INFLUXDB_DATA_COMPACT_THROUGHPUT: 48m

      # CompactThroughputBurst is the rate limit in bytes per second that we will allow TSM compactions to write to
      # disk.
      #INFLUXDB_DATA_COMPACT_THROUGHPUT_BURST: 48m

      # The threshold, in bytes, when an index write-ahead log file will compact into an index file. Lower sizes will
      # cause log files to be compacted more quickly and result in lower heap usage at the expense of write throughput.
      # Higher sizes will be compacted less frequently, store more series in-memory, and provide higher write
      # throughput. Valid size suffixes are k, m, or g (case insensitive, 1024 = 1k). Values without a size suffix are
      # in bytes.
      #INFLUXDB_DATA_MAX_INDEX_LOG_FILE_SIZE: 1m

      # The maximum series allowed per database before writes are dropped. This limit can prevent high cardinality
      # issues at the database level. This limit can be disabled by setting it to 0.
      INFLUXDB_DATA_MAX_SERIES_PER_DATABASE: 0

      # The maximum number of tag values per tag that are allowed before writes are dropped. This limit can prevent
      # high cardinality tag values from being written to a measurement. This limit can be disabled by setting it to 0.
      INFLUXDB_DATA_MAX_VALUES_PER_TAG: 0

      # If true, then the mmap advise value MADV_WILLNEED will be provided to the kernel with respect to TSM files.
      # This setting has been found to be problematic on some kernels, and defaults to off. It might help users who
      # have slow disks in some cases.
      #INFLUXDB_DATA_TSM_USE_MADV_WILLNEED: 'false'

      
      
      ### Controls the clustering service configuration.

      # The default time a write request will wait until a "timeout" error is returned to the caller.
      #INFLUXDB_COORDINATOR_WRITE_TIMEOUT: 10s

      # The maximum number of concurrent queries allowed to be executing at one time. If a query is executed and
      # exceeds this limit, an error is returned to the caller. This limit can be disabled by setting it to 0.
      #INFLUXDB_COORDINATOR_MAX_CONCURRENT_QUERIES: 0

      # The maximum time a query will is allowed to execute before being killed by the system. This limit can help
      # prevent run away queries. Setting the value to 0 disables the limit.
      #INFLUXDB_COORDINATOR_QUERY_TIMEOUT: 0s

      # The time threshold when a query will be logged as a slow query. This limit can be set to help discover slow or
      # resource intensive queries. Setting the value to 0 disables the slow query logging.
      #INFLUXDB_COORDINATOR_LOG_QUERIES_AFTER: 0s

      # The maximum number of points a SELECT can process. A value of 0 will make the maximum point count unlimited.
      # This will only be checked every second so queries will not be aborted immediately when hitting the limit.
      #INFLUXDB_COORDINATOR_MAX_SELECT_POINT: 0

      # The maximum number of series a SELECT can run. A value of 0 will make the maximum series count unlimited.
      #INFLUXDB_COORDINATOR_MAX_SELECT_SERIES: 0

      # The maxium number of group by time bucket a SELECT can create. A value of zero will max the maximum number of
      # buckets unlimited.
      #INFLUXDB_COORDINATOR_MAX_SELECT_BUCKETS: 0

      
      
      ### Controls the enforcement of retention policies for evicting old data.

      # Determines whether retention policy enforcement enabled.
      INFLUXDB_RETENTION_ENABLED: 'true'

      # The interval of time when retention policy enforcement checks run.
      INFLUXDB_RETENTION_CHECK_INTERVAL: 30m

      
      
      ### Controls the precreation of shards, so they are available before data arrives. Only shards that, after
      ### creation, will have both a start- and end-time in the future, will ever be created. Shards are never
      ### precreated that would be wholly or partially in the past.

      # Determines whether shard pre-creation service is enabled.
      #INFLUXDB_SHARD_PRECREATION_ENABLED: 'true'

      # The interval of time when the check to pre-create new shards runs.
      #INFLUXDB_SHARD_PRECREATION_CHECK_INTERVAL: 10m

      # The default period ahead of the endtime of a shard group that its successor group is created.
      #INFLUXDB_SHARD_PRECREATION_ADVANCE_PERIOD: 30m

      
      
      ### Controls the system self-monitoring, statistics and diagnostics. The internal database for monitoring data is
      ### created automatically if if it does not already exist. The target retention within this database is called
      ### 'monitor' and is also created with a retention period of 7 days and a replication factor of 1, if it does not
      ### exist. In all cases the this retention policy is configured as the default for the database.

      # Whether to record statistics internally.
      #INFLUXDB_MONITOR_STORE_ENABLED: 'true'

      # The destination database for recorded statistics
      #INFLUXDB_MONITOR_STORE_DATABASE:_internal

      # The interval at which to record statistics
      #INFLUXDB_MONITOR_STORE_INTERVAL: 10s

      
      
      ### Controls how the HTTP endpoints are configured. These are the primary mechanism for getting data into and out
      ### of InfluxDB.

      # Determines whether HTTP endpoint is enabled.
      INFLUXDB_HTTP_ENABLED: 'true'

      # Determines whether the Flux query endpoint is enabled.
      INFLUXDB_HTTP_FLUX_ENABLED: 'true'

      # The bind address used by the HTTP service.
      INFLUXDB_HTTP_BIND_ADDRESS: 0.0.0.0:8086

      # Determines whether user authentication is enabled over HTTP/HTTPS.
      #INFLUXDB_HTTP_AUTH_ENABLED: 'false'

      # The default realm sent back when issuing a basic auth challenge.
      #INFLUXDB_HTTP_REALM: InfluxDB

      # Determines whether HTTP request logging is enabled.
      #INFLUXDB_HTTP_LOG_ENABLED: 'true'

      # Determines whether the HTTP write request logs should be suppressed when the log is enabled.
      #INFLUXDB_HTTP_SUPPRESS_WRITE_LOG: 'false'

      # When HTTP request logging is enabled, this option specifies the path where log entries should be written. If
      # unspecified, the default is to write to stderr, which intermingles HTTP logs with internal InfluxDB logging. If
      # influxd is unable to access the specified path, it will log an error and fall back to writing the request log
      # to stderr.
      #INFLUXDB_HTTP_ACCESS_LOG_PATH: 

      # Filters which requests should be logged. Each filter is of the pattern NNN, NNX, or NXX where N is a number and
      # X is a wildcard for any number. To filter all 5xx responses, use the string 5xx. If multiple filters are used
      # then only one has to match. The default is to have no filters which will cause every request to be printed.
      #INFLUXDB_HTTP_ACCESS_LOG_STATUS_FILTERS: '[]'

      # Determines whether detailed write logging is enabled.
      #INFLUXDB_HTTP_WRITE_TRACING: 'false'

      # Determines whether the pprof endpoint is enabled. This endpoint is used for
      # troubleshooting and monitoring.
      #INFLUXDB_HTTP_PPROF_ENABLED: 'true'

      # Enables a pprof endpoint that binds to localhost:6060 immediately on startup.
      # This is only needed to debug startup issues.
      #INFLUXDB_HTTP_DEBUG_PPROF_ENABLED: 'false'

      # Determines whether HTTPS is enabled.
      #INFLUXDB_HTTP_HTTPS_ENABLED: 'false'

      # The SSL certificate to use when HTTPS is enabled.
      #INFLUXDB_HTTP_HTTPS_CERTIFICATE: /etc/ssl/influxdb.pem

      # Use a separate private key location.
      #INFLUXDB_HTTP_HTTPS_PRIVATE_KEY: 

      # The JWT auth shared secret to validate requests using JSON web tokens.
      #INFLUXDB_HTTP_SHARED_SECRET: 

      # The default chunk size for result sets that should be chunked.
      #INFLUXDB_HTTP_MAX_ROW_LIMIT: 0

      # The maximum number of HTTP connections that may be open at once. New connections that would exceed this limit
      # are dropped. Setting this value to 0 disables the limit.
      #INFLUXDB_HTTP_MAX_CONNECTION_LIMIT: 0

      # Enable http service over unix domain socket
      #INFLUXDB_HTTP_UNIX_SOCKET_ENABLED: 'false'

      # The path of the unix domain socket.
      #INFLUXDB_HTTP_BIND_SOCKET: /var/run/influxdb.sock

      # The maximum size of a client request body, in bytes. Setting this value to 0 disables the limit.
      #INFLUXDB_HTTP_MAX_BODY_SIZE: 25000000

      # The maximum number of writes processed concurrently. Setting this to 0 disables the limit.
      #INFLUXDB_HTTP_MAX_CONCURRENT_WRITE_LIMIT: 0

      # The maximum number of writes queued for processing. Setting this to 0 disables the limit.
      #INFLUXDB_HTTP_MAX_ENQUEUED_WRITE_LIMIT: 0

      # The maximum duration for a write to wait in the queue to be processed.
      # Setting this to 0 or setting max-concurrent-write-limit to 0 disables the limit.
      #INFLUXDB_HTTP_ENQUEUED_WRITE_TIMEOUT: 0

      
      
      ### Controls how the logger emits logs to the output.

      # Determines which log encoder to use for logs. Available options are auto, logfmt, and json. auto will use a
      # more a more user-friendly output format if the output terminal is a TTY, but the format is not as easily
      # machine-readable. When the output is a non-TTY, auto will use logfmt.
      #INFLUXDB_LOGGING_FORMAT: auto

      # Determines which level of logs will be emitted. The available levels are error, warn, info, and debug. Logs
      # that are equal to or above the specified level will be emitted.
      #INFLUXDB_LOGGING_LEVEL: info

      # Suppresses the logo output that is printed when the program is started. The logo is always suppressed if STDOUT
      # is not a TTY.
      INFLUXDB_LOGGING_SUPPRESS_LOGO: 'true'

      
      
      ### Controls the subscriptions, which can be used to fork a copy of all data received by the InfluxDB host.

      # Determines whether the subscriber service is enabled.
      #INFLUXDB_SUBSCRIBER_ENABLED: 'true'

      # The default timeout for HTTP writes to subscribers.
      #INFLUXDB_SUBSCRIBER_HTTP_TIMEOUT: 30s

      # Allows insecure HTTPS connections to subscribers. This is useful when testing with self-signed certificates.
      #INFLUXDB_SUBSCRIBER_INSECURE_SKIP_VERIFY: 'false'

      # The path to the PEM encoded CA certs file. If the empty string, the default system certs will be used
      #INFLUXDB_SUBSCRIBER_CA_CERTS: 

      # The number of writer goroutines processing the write channel.
      #INFLUXDB_SUBSCRIBER_WRITE_CONCURRENCY: 40

      # The number of in-flight writes buffered in the write channel.
      #INFLUXDB_SUBSCRIBER_WRITE_BUFFER_SIZE: 1000

      
      
      ### Controls how continuous queries are run within InfluxDB.

      # Determines whether the continuous query service is enabled.
      #INFLUXDB_CONTINUOUS_QUERIES_ENABLED: 'true'

      # Controls whether queries are logged when executed by the CQ service.
      #INFLUXDB_CONTINUOUS_QUERIES_LOG_ENABLED: 'true'

      # Controls whether queries are logged to the self-monitoring data store.
      #INFLUXDB_CONTINUOUS_QUERIES_QUERY_STATS_ENABLED: 'false'

      # interval for how often continuous queries will be checked if they need to run
      #INFLUXDB_CONTINUOUS_QUERIES_RUN_INTERVAL: 1s

      
      
      ### Global configuration settings for TLS in InfluxDB.

      # Determines the available set of cipher suites. See https://golang.org/pkg/crypto/tls/#pkg-constants for a list
      # of available ciphers, which depends on the version of Go (use the query SHOW DIAGNOSTICS to see the version of
      # Go used to build InfluxDB). If not specified, uses the default settings from Go's crypto/tls package.
      #INFLUXDB_TLS_CIPHERS: '["TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305","TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"]'

      # Minimum version of the tls protocol that will be negotiated. If not specified, uses the
      # default settings from Go's crypto/tls package.
      #INFLUXDB_TLS_MIN_VERSION: tls1.2

      # Maximum version of the tls protocol that will be negotiated. If not specified, uses the
      # default settings from Go's crypto/tls package.
      #INFLUXDB_TLS_MAX_VERSION: tls1.2

  chronograf:
    image: chronograf:1.7.14
    container_name: chronograf
    depends_on:
      - influxdb
      - kapacitor
    restart: 'no'
    hostname: chronograf
    networks:
      - tick
    ports:
      - 8888:8888/tcp
    volumes:
      - /var/lib/chronograf:/var/lib/chronograf
    environment:
      ### Chronograf Service Options
      
      # The IP that the chronograf service listens on.
      HOST: 0.0.0.0
      
      # The port that the chronograf service listens on for insecure connections.
      PORT: 8888
      
      # The file path to the BoltDB file.
      BOLT_PATH: /var/lib/chronograf/chronograf-v1.db
      
      # The path to the directory of canned dashboards files.
      CANNED_PATH: /usr/share/chronograf/canned
      
      # Path to directory of canned dashboards, sources, Kapacitor connections, and organizations.
      RESOURCES_PATH: /usr/share/chronograf/resources
      
      # ProtoBoards Path.
      PROTOBOARDS_PATH: /usr/share/chronograf/protoboards
      
      # The URL path prefix under which all chronograf routes will be mounted.
      #BASE_PATH: 
      
      # URL of JSON feed to display as a news feed on the client Status page.
      #STATUS_FEED_URL: https://www.influxdata.com/feed/json

      
      
      ### InfluxDB Connection Options
      
      # The location of your InfluxDB instance, including http://, IP address, and port.
      INFLUXDB_URL: http://influxdb:8086
      
      # The [username] for your InfluxDB instance.
      #INFLUXDB_USERNAME: 
      
      # The [password] for your InfluxDB instance.
      #INFLUXDB_PASSWORD: 



      ### Kapacitor Connection Options

      # The location of your Kapacitor instance, including http://, IP address, and port.
      KAPACITOR_URL: http://kapacitor:9092
      
      # The username for your Kapacitor instance.
      #KAPACITOR_USERNAME: 
      
      # The password for your Kapacitor instance.
      #KAPACITOR_PASSWORD: 

      
      
      ### TLS (Transport Layer Security) Options
      
      # The file path to PEM-encoded public key certificate.
      #TLS_CERTIFICATE: 
      
      # The file path to private key associated with given certificate.
      #TLS_PRIVATE_KEY: 
      
      # Custom link added to Chronograf User menu options. Useful for providing links to internal company resources for your Chronograf users. Can be used when any OAuth 2.0 authentication is enabled. To add another custom link, repeat the custom link option.
      #CUSTOM_LINK: http://www.influxdata.com/
      
      # Disables reporting of usage statistics. Usage statistics reported once every 24 hours include: OS, arch, version, cluster_id, and uptime.
      REPORTING_DISABLED: 'true'
      
      # Set the logging level. Valid values: debug | info | error
      LOG_LEVEL: info

      
      
      ### Authentication Options
      
      # The public URL required to access Chronograf using a web browser. For example, if you access Chronograf using the default URL, the public URL value would be http://localhost:8888. Required for Google OAuth 2.0 authentication. Used for Auth0 and some generic OAuth 2.0 authentication providers.
      #PUBLIC_URL: http://127.0.0.1:8888

  kapacitor:
    image: kapacitor:1.5.3
    container_name: kapacitor
    depends_on:
      - influxdb
    restart: 'no'
    hostname: kapacitor
    networks:
      - tick
    ports:
      - 9092:9092/tcp
    volumes:
      - /var/lib/kapacitor:/var/lib/kapacitor
    environment:
      ### Kapacitor Basic Properties
      
      # Must be resolvable by any configured InfluxDB hosts.
      KAPACITOR_HOSTNAME: kapacitor
      
      # Directory for storing a small amount of metadata about the server.
      KAPACITOR_DATA_DIR: /var/lib/kapacitor
      
      # Boolean indicating whether or not to skip configuration overrides.
      #KAPACITOR_SKIP_CONFIG_OVERRIDES: 'false'
      
      # Default retention-policy, if a write is made to Kapacitor and it does not have a retention policy associated
      # with it, then the retention policy will be set to this value.
      #KAPACITOR_DEFAULT_RETENTION_POLICY: 

      # HTTP API Server for Kapacitor. This server is always on, it serves both as a write endpoint and as the API
      # endpoint for all other Kapacitor calls.
      KAPACITOR_HTTP_BIND_ADDRESS: 0.0.0.0:9092
      KAPACITOR_HTTP_LOG_ENABLED: 'true'
      #KAPACITOR_HTTP_WRITE_TRACING: 'false'
      #KAPACITOR_HTTP_PPROF_ENABLED: 'false'

      KAPACITOR_HTTP_HTTPS_ENABLED: 'false'
      #KAPACITOR_HTTP_HTTPS_CERTIFICATE: /etc/ssl/kapacitor.pem
      #KAPACITOR_HTTP_HTTPS_PRIVATE_KEY: 

      # Enable/Disable the service for overridding configuration via the HTTP API.
      KAPACITOR_CONFIG_OVERRIDE_ENABLED: 'true'

      # Destination for logs. Can be a path to a file or 'STDOUT', 'STDERR'.
      #KAPACITOR_LOGGING_FILE: STDOUT
      
      # Logging level can be one of: DEBUG, INFO, ERROR
      #KAPACITOR_LOGGING_LEVEL: INFO

      # Enable/Disable the service for loading tasks/templates/handlers from a directory.
      #KAPACITOR_LOAD_ENABLED: 'true'
      
      # Directory where task/template/handler files are set
      #KAPACITOR_LOAD_DIR: /etc/kapacitor/load

      # Where to store replay files, aka recordings.
      #KAPACITOR_REPLAY_DIR: /var/lib/kapacitor/replay

      # Where to store the tasks database
      # DEPRECATED: This option is not needed for new installations. It is only used to determine the location of the
      # task.db file for migrating to the new `storage` service.
      #KAPACITOR_TASK_DIR: /var/lib/kapacitor/tasks
      
      # How often to snapshot running task state.
      #KAPACITOR_TASK_SNAPSHOT_INTERVAL: 60s

      # Where to store the Kapacitor boltdb database
      KAPACITOR_STORAGE_BOLTDB: /var/lib/kapacitor/kapacitor.db

      # Globally configure deadman's switches on all tasks.
      # NOTE: for this to be of use you must also globally configure at least one alerting method.
      #KAPACITOR_DEADMAN_GLOBAL: 'false'
      
      # Threshold, if globally configured the alert will be triggered if the throughput in points/interval is
      # <= threshold.
      #KAPACITOR_DEADMAN_THRESHOLD: 0.0
      
      # Interval, if globally configured the frequency at which to check the throughput.
      #KAPACITOR_DEADMAN_INTERVAL: 10s
      
      # The alert ID. NODE_NAME will be replaced with the name of the node being monitored.
      #KAPACITOR_DEADMAN_ID: "node 'NODE_NAME' in task '{{ .TaskName }}'"
      
      # The message of the alert. INTERVAL will be replaced by the interval.
      #KAPACITOR_DEADMAN_MESSAGE: '{{ .ID }} is {{ if eq .Level \"OK\" }}alive{{ else }}dead{{ end }}: {{ index .Fields \"collected\" | printf \"%0.3f\" }} points/INTERVAL.'

      # Connect to an InfluxDB cluster. Multiple InfluxDB configurations can be defined. Kapacitor can subscribe, query
      # and write to this cluster. Using InfluxDB is not required and can be disabled. Exactly one must be marked as
      # the default. Each one will be given a name and can be referenced in batch queries and InfluxDBOut nodes.
      KAPACITOR_INFLUXDB_0_ENABLED: 'true'
      KAPACITOR_INFLUXDB_0_DEFAULT: 'true'
      KAPACITOR_INFLUXDB_0_NAME: influxdb
      KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
      #KAPACITOR_INFLUXDB_0_USERNAME: 
      #KAPACITOR_INFLUXDB_0_PASSWORD: 
      #KAPACITOR_INFLUXDB_0_TIMEOUT: 0
      #KAPACITOR_INFLUXDB_0_SSL_CA: /etc/kapacitor/ca.pem
      #KAPACITOR_INFLUXDB_0_SSL_CERT: /etc/kapacitor/cert.pem
      #KAPACITOR_INFLUXDB_0_SSL_KEY: /etc/kapacitor/key.pem

      # Do not verify the TLS/SSL certificate. This is insecure.
      #KAPACITOR_INFLUXDB_0_INSECURE_SKIP_VERIFY: 'false'

      # Maximum time to try and connect to InfluxDB during startup
      #KAPACITOR_INFLUXDB_0_STARTUP_TIMEOUT: 5m

      # Turn off all subscriptions
      #KAPACITOR_INFLUXDB_0_DISABLE_SUBSCRIPTIONS: 'false'
      
      # Subscription mode is either "cluster" or "server"
      #KAPACITOR_INFLUXDB_0_SUBSCRIPTION_MODE: cluster
      
      # Which protocol to use for subscriptions. One of 'udp', 'http', or 'https'.
      #KAPACITOR_INFLUXDB_0_SUBSCRIPTION_PROTOCOL: http
      
      # Subscriptions resync time interval. Useful if you want to subscribe to new created databases without restart
      # Kapacitord
      #KAPACITOR_INFLUXDB_0_SUBSCRIPTIONS_SYNC_INTERVAL: 1m0s

      # Override the global hostname option for this InfluxDB cluster. Useful if the InfluxDB cluster is in a separate
      # network and needs special config to connect back to this Kapacitor instance. Defaults to `hostname` if empty.
      #KAPACITOR_INFLUXDB_0_KAPACITOR_HOSTNAME: localhost

      # Override the global http port option for this InfluxDB cluster. Useful if the InfluxDB cluster is in a separate
      # network and needs special config to connect back to this Kapacitor instance. Defaults to the port from
      # `[http] bind-address` if 0.
      #KAPACITOR_INFLUXDB_0_HTTP_PORT: 0

      # Send usage statistics every 12 hours to Enterprise.
      KAPACITOR_REPORTING_ENABLED: 'false'
      #KAPACITOR_REPORTING_URL: https://usage.influxdata.com

      # Emit internal statistics about Kapacitor. To consume these stats create a stream task that selects data from
      # the configured database and retention policy.
      # Example:
      #   stream|from().database('_kapacitor').retentionPolicy('autogen')...
      KAPACITOR_STATS_ENABLED: 'true'
      KAPACITOR_STATS_STATS_INTERVAL: 10s
      KAPACITOR_STATS_DATABASE: _kapacitor
      KAPACITOR_STATS_RETENTION_POLICY: autogen